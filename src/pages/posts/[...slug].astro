---
import { getCollection, getEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts", ({ data }) => {
    return data.draft !== true;
  });

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Get related posts
const allPosts = await getCollection("posts");
const relatedPosts = allPosts
  .filter(
    (p) =>
      p.slug !== post.slug &&
      !p.data.draft &&
      p.data.tags.some((tag) => post.data.tags.includes(tag))
  )
  .slice(0, 3);
---

<BaseLayout 
  title={post.data.title} 
  description={post.data.description}
  keywords={post.data.tags}
  type="article"
>

  <div class="max-w-4xl mx-auto py-8">
    <article class="prose lg:prose-xl mx-auto">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-secondary mb-4">{post.data.title}</h1>

      <div class="flex items-center text-gray-600 mb-4">
        <span>By {post.data.author}</span>
        <span class="mx-2">•</span>
        <time datetime={post.data.date.toISOString()}>
          {
            post.data.date.toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        <span class="mx-2">•</span>
        <span class="bg-secondary text-white px-2 py-1 rounded text-sm">
          {post.data.category}
        </span>
      </div>

      {
        post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-6">
            {post.data.tags.map((tag) => (
              <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm">
                #{tag}
              </span>
            ))}
          </div>
        )
      }
    </header>

    <Content />

    {
      relatedPosts.length > 0 && (
        <aside class="mt-12 pt-8 border-t">
          <h3 class="text-2xl font-bold mb-6">Related Posts</h3>
          <div class="grid md:grid-cols-3 gap-6">
            {relatedPosts.map((relatedPost) => (
              <a
                href={`/posts/${relatedPost.slug}/`}
                class="block bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow"
              >
                <div class="p-4">
                  <h4 class="font-bold text-secondary mb-2">
                    {relatedPost.data.title}
                  </h4>
                  <p class="text-gray-600 text-sm">
                    {relatedPost.data.description}
                  </p>
                </div>
              </a>
            ))}
          </div>
        </aside>
      )
    }
    </article>
  </div>
</BaseLayout>
