---
globs: *.astro,*.jsx,*.tsx
description: "Astro component patterns and React island identification for Casa Patron migration"
---

# Astro Component Patterns & React Islands

## üèóÔ∏è Component Architecture Strategy

### Astro Components (.astro) - Use for Static Content
```astro
---
// src/components/JumboPanel.astro
export interface Props {
  content: {
    image: { imageSrc: any; imageAlt: string }
    headline: { spanText: string; spanColor: string; headerText: string }
    paragraph: { paragraphText: string }
  }
}

const { content } = Astro.props
const { image, headline, paragraph } = content
---

<section class="flex flex-col lg:flex-row items-center gap-8 py-12">
  <div class="lg:w-1/2">
    <Image 
      src={image.imageSrc} 
      alt={image.imageAlt}
      class="rounded-lg shadow-lg"
    />
  </div>
  <div class="lg:w-1/2">
    <h2 class="text-3xl lg:text-4xl font-bold mb-4">
      <span style={`color: ${headline.spanColor}`}>
        {headline.spanText}
      </span>
      {' ' + headline.headerText}
    </h2>
    <p class="text-lg text-gray-700">
      {paragraph.paragraphText}
    </p>
  </div>
</section>
```

### React Islands (.jsx) - Use ONLY for Interactive Features
```jsx
// src/components/react/BackToTopButton.jsx
import { useState, useEffect } from 'react'

export default function BackToTopButton() {
  const [isVisible, setIsVisible] = useState(false)

  useEffect(() => {
    const toggleVisibility = () => {
      setIsVisible(window.pageYOffset > 300)
    }

    window.addEventListener('scroll', toggleVisibility)
    return () => window.removeEventListener('scroll', toggleVisibility)
  }, [])

  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    })
  }

  return isVisible ? (
    <button
      onClick={scrollToTop}
      className="fixed bottom-4 right-4 bg-secondary hover:bg-tertiary text-white p-3 rounded-full shadow-lg transition-all duration-300 z-50"
      aria-label="Back to top"
    >
      ‚Üë
    </button>
  ) : null
}
```

## üîÑ Gatsby to Astro Conversion Patterns

### 1. Layout Component Migration
```astro
---
// src/layouts/BaseLayout.astro
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import BackToTopButton from '../components/react/BackToTopButton.jsx'
import '../styles/global.css'

export interface Props {
  title: string
  description?: string
  heroContent?: any
  heroImg?: any
  mobileHeroImg?: any
  bodyClasses?: string
}

const { 
  title, 
  description = "Casa Patron vacation rental", 
  heroContent,
  heroImg,
  mobileHeroImg,
  bodyClasses = ""
} = Astro.props
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
  </head>
  <body class={`${bodyClasses} relative overflow-hidden`}>
    <Header 
      heroContent={heroContent}
      heroImg={heroImg}
      mobileHeroImg={mobileHeroImg}
    />
    <main class="max-w-7xl mx-auto px-4 sm:px-6 z-20 relative min-h-[85vh]">
      <slot />
    </main>
    <Footer />
    <BackToTopButton client:load />
  </body>
</html>
```

### 2. Page Component Migration
```astro
---
// src/pages/index.astro
import { Image } from 'astro:assets'
import BaseLayout from '../layouts/BaseLayout.astro'
import JumboPanel from '../components/JumboPanel.astro'
import ImageGallery from '../components/ImageGallery.astro'
import LocalAttractionCards from '../components/LocalAttractionCards.astro'
import Spacer from '../components/Spacer.astro'

// Import images from assets
import casaPatronBirdImg from '../assets/cp-mural.jpg'
import terraceSummerImg from '../assets/cp-terrace-summer.jpg'
// ... other imports

const panels = [
  {
    image: {
      imageSrc: casaPatronBirdImg,
      imageAlt: "The Casa Patron mural, a black bird painted over a yellow background."
    },
    headline: {
      spanText: "Experience",
      spanColor: "#1C68CB",
      headerText: "New Mexico"
    },
    paragraph: {
      paragraphText: "Relax and unwind in the stunning Casa Patron cabin..."
    }
  },
  // ... other panels
]

const title = "Casa Patron: Short Term Vacation Rental Home in Alto, NM Near Ruidoso & Ski Apache"
---

<BaseLayout 
  title={title}
  heroContent={HomePageHeroContent}
  heroImg={homeHeroImg}
  mobileHeroImg={mobileHeroImg}
>
  <div id="what-is-casa-patron"></div>
  {panels.map((content, index) => (
    <div key={index}>
      <Spacer />
      <Spacer className="block sm:hidden" />
      <JumboPanel content={content} />
    </div>
  ))}
  
  <Spacer />
  <ImageGallery images={imagesGallery[0]} />
  
  <div class="bg-grey-neutral text-primary py-4 rounded-3xl shadow-md border-2 border-primary border-opacity-80">
    <blockquote class="text-lg md:text-xl lg:text-2xl xl:text-3xl font-bold !leading-[1.9] text-center mx-auto my-6 md:my-10 lg:my-12 px-6 md:px-8 lg:px-10 max-w-7xl">
      <p class="mb-6">
        Unwind and recharge in nature. Casa Patron offers a serene and peaceful getaway...
      </p>
    </blockquote>
  </div>
  
  <LocalAttractionCards />
  <ImageGallery images={imagesGallery[1]} />
  
  <div class="flex flex-col items-center justify-center py-8 sm:py-16 max-w-xl mx-auto">
    <h2 class="text-3xl sm:text-5xl font-bold mb-6 sm:mb-10">
      Escape to Casa Patron
    </h2>
    <a
      href="/contact-us/"
      class="bg-secondary transition hover:bg-tertiary text-white text-xl sm:text-2xl font-light rounded-full py-2 sm:py-2 px-6 sm:px-6 shadow-md hover:shadow-sm"
    >
      Book Now
    </a>
  </div>
</BaseLayout>

<!-- Hero content as separate component or inline -->
<script>
  // Any client-side JavaScript here
</script>
```

## üéØ React Island Identification

### ‚úÖ Convert to React Islands (Interactive)
- `BackToTopButton` - Scroll interaction
- Any contact forms with validation
- Image carousels with touch/swipe
- Interactive maps or booking widgets
- Any component with `useState`, `useEffect`, or event handlers

### ‚ùå Keep as Astro Components (Static)
- `Header` - Navigation (unless mobile menu is interactive)
- `Footer` - Static content
- `JumboPanel` - Content display
- `ImageGallery` - Static grid (unless interactive)
- `LocalAttractionCards` - Content cards
- `Spacer` - Layout utility
- `SEO` - Meta tag component

## üñºÔ∏è Image Component Migration

### From Gatsby Image to Astro Assets
```astro
---
// Import images as ES modules
import heroImage from '../assets/cp-terrace-beauty-winter.jpg'
import { Image } from 'astro:assets'
---

<!-- Astro optimized image -->
<Image 
  src={heroImage}
  alt="Casa Patron terrace in winter"
  width={1200}
  height={800}
  quality={80}
  format="webp"
  class="rounded-lg shadow-lg"
/>

<!-- For background images -->
<div 
  class="hero-bg"
  style={`background-image: url(${heroImage.src})`}
>
  <!-- Content -->
</div>
```

## üìù Content Collections Integration

### Dynamic Page Generation
```astro
---
// src/pages/docs/[slug].astro
import { getCollection, getEntry } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'

export async function getStaticPaths() {
  const docs = await getCollection('docs')
  return docs.map((doc) => ({
    params: { slug: doc.slug },
    props: { doc }
  }))
}

const { doc } = Astro.props
const { Content } = await doc.render()
---

<BaseLayout title={doc.data.title} description={doc.data.description}>
  <article class="prose lg:prose-xl mx-auto">
    <h1>{doc.data.title}</h1>
    <Content />
  </article>
</BaseLayout>
```

## üîß Component Composition Patterns

### Slot Usage for Flexible Components
```astro
---
// src/components/Card.astro
export interface Props {
  title?: string
  className?: string
}

const { title, className = "" } = Astro.props
---

<div class={`bg-white rounded-lg shadow-md p-6 ${className}`}>
  {title && <h3 class="text-xl font-bold mb-4">{title}</h3>}
  <slot />
  <slot name="actions" />
</div>
```

### Usage with Named Slots
```astro
<Card title="Casa Patron Features">
  <p>Comfortable accommodations with modern amenities.</p>
  
  <div slot="actions">
    <a href="/book" class="btn-primary">Book Now</a>
  </div>
</Card>
```

## ‚úÖ Migration Checklist

### Component Conversion
- [ ] Identify all components that need React interactivity
- [ ] Convert static components to `.astro` format
- [ ] Implement proper TypeScript interfaces
- [ ] Test component rendering and styling
- [ ] Verify slot functionality works correctly

### Performance Optimization
- [ ] Use `client:load` only when necessary
- [ ] Prefer `client:visible` for below-the-fold components
- [ ] Use `client:idle` for non-critical interactive components
- [ ] Minimize JavaScript bundle size