---
globs: package.json,astro.config.mjs,*.md
description: "Initial project setup and migration commands for Casa Patron Astro migration"
---

# Project Setup & Migration Commands

## 🚀 Initial Setup Commands

### 1. Create New Astro Project
```bash
# Create new Astro project in parallel directory
cd ..
npm create astro@latest casa-patron-astro -- --template minimal --typescript strict --git
cd casa-patron-astro

# Install core dependencies
npm install @astrojs/react @astrojs/sitemap @astrojs/partytown
npm install tailwindcss @tailwindcss/vite
npm install react react-dom @types/react @types/react-dom

# Install development tools
npm install -D prettier eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin
```

### 2. Directory Structure Setup
```bash
# Create essential directories
mkdir -p src/{layouts,components/{react,mdx},assets,content/{docs,posts},styles,utils}
mkdir -p public/images
mkdir -p .cursor/rules

# Copy static assets
cp ../casa-patron-2/static/* public/
cp -r ../casa-patron-2/src/images/* src/assets/
```

### 3. Configuration Files Setup
```bash
# Copy and modify configuration files
cp ../casa-patron-2/tailwind.config.js . # (will need modification for v4)
cp ../casa-patron-2/.gitignore .
cp ../casa-patron-2/README.md .
```

## 🛠️ Development Workflow

### Git Integration
```bash
# Initialize git with proper remote
git init
git remote add origin https://github.com/your-username/casa-patron-astro.git
git add .
git commit -m "Initial Astro migration setup"

# Create development branch
git checkout -b migration/initial-setup
```

### Development Commands
```bash
# Development server
npm run dev

# Build for production
npm run build

# Preview production build
npm run preview

# Type checking
npm run astro check

# Format code
npm run format
```

## 📦 Package.json Scripts
```json
{
  "scripts": {
    "dev": "astro dev",
    "start": "astro dev",
    "build": "astro check && astro build",
    "preview": "astro preview",
    "astro": "astro",
    "format": "prettier --write .",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx,.astro",
    "type-check": "astro check"
  }
}
```

## 🔧 Essential Configuration Files

### astro.config.mjs
```js
import { defineConfig } from 'astro/config'
import react from '@astrojs/react'
import sitemap from '@astrojs/sitemap'
import partytown from '@astrojs/partytown'
import tailwindcss from '@tailwindcss/vite'

export default defineConfig({
  site: 'https://casapatronalto.com',
  output: 'static',
  
  vite: {
    plugins: [tailwindcss()],
  },
  
  integrations: [
    react({
      include: ['**/react/**/*']
    }),
    sitemap(),
    partytown({
      config: {
        forward: ['dataLayer.push']
      }
    })
  ]
})
```

### tsconfig.json
```json
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"],
      "@/components/*": ["src/components/*"],
      "@/layouts/*": ["src/layouts/*"],
      "@/assets/*": ["src/assets/*"],
      "@/utils/*": ["src/utils/*"]
    }
  }
}
```

### styles/global.css
```css
@import "tailwindcss";

/* Casa Patron Theme Variables */
@theme {
  --color-primary: #FEE43A;
  --color-secondary: #1C68CB;
  --color-tertiary: #FF715B;
  --color-grey-neutral: #273240;
  --color-success: #28D679;
  
  /* Custom animations */
  --animate-spin-words: spin-words 8s linear infinite;
}

/* Custom keyframes */
@keyframes spin-words {
  0%, 25% { transform: translateY(0%); }
  33%, 58% { transform: translateY(-100%); }
  66%, 91% { transform: translateY(-200%); }
  100% { transform: translateY(-300%); }
}

/* Custom utilities */
@utility text-shadow {
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

/* Global styles */
html {
  scroll-behavior: smooth;
}

body {
  font-family: system-ui, -apple-system, sans-serif;
}
```

## 📋 Migration Priority Order

### Phase 1: Foundation (Week 1)
1. **Project Setup** - Create Astro project structure
2. **Tailwind v4** - Configure new CSS system
3. **Content Collections** - Set up docs and posts collections
4. **Assets Migration** - Move and optimize images

### Phase 2: Core Components (Week 2)
1. **Layout System** - Create BaseLayout.astro
2. **Static Components** - Convert Gatsby components to Astro
3. **React Islands** - Identify and implement interactive components
4. **Page Migration** - Convert index and other pages

### Phase 3: Content & SEO (Week 3)
1. **Content Migration** - Move all MDX content
2. **Dynamic Routes** - Set up blog and docs routing
3. **SEO Implementation** - Migrate SEO components
4. **Performance Optimization** - Implement lazy loading, etc.

### Phase 4: Testing & Launch (Week 4)
1. **Testing** - Cross-browser and device testing
2. **Performance Audit** - Lighthouse and Core Web Vitals
3. **Content Verification** - Ensure all content migrated
4. **Deployment** - Set up production deployment

## 🔍 Migration Verification Checklist

### Content Parity
- [ ] All pages from Gatsby site exist in Astro
- [ ] All images display correctly
- [ ] All MDX content renders properly
- [ ] Navigation works correctly
- [ ] Contact forms function (if any)

### Performance Metrics
- [ ] Lighthouse score > 95 on all pages
- [ ] Core Web Vitals in green
- [ ] Page load times < 2 seconds
- [ ] Mobile performance optimized

### SEO Maintenance
- [ ] All URLs remain the same (or proper redirects)
- [ ] Meta tags preserved
- [ ] Schema markup intact
- [ ] Sitemap generated correctly
- [ ] Search engine rankings maintained

### Functionality Testing
- [ ] All interactive elements work
- [ ] Responsive design maintained
- [ ] Accessibility standards met
- [ ] Cross-browser compatibility verified

## 🚨 Critical Migration Notes

### Preserve These Elements
- **URL Structure**: Keep existing URLs to maintain SEO
- **Schema Markup**: Maintain lodging business schema
- **Brand Colors**: Exact color values from Tailwind config
- **Custom Animations**: The spin-words animation for hero text
- **Image Optimization**: Maintain responsive image loading

### Avoid These Pitfalls
- Don't change URL structure without redirects
- Don't break existing image URLs
- Don't remove meta tags without replacement
- Don't introduce unnecessary JavaScript
- Don't compromise mobile performance

### Testing Strategy
1. **Local Development**: Test all functionality locally
2. **Staging Deployment**: Deploy to staging for full testing
3. **Performance Testing**: Run Lighthouse audits
4. **Content Audit**: Verify all content migrated correctly
5. **SEO Validation**: Check meta tags and schema markup

## 📞 Rollback Plan
If migration encounters critical issues:
1. Keep original Gatsby site running
2. Use branch-based development
3. Have DNS rollback plan ready
4. Document all changes for quick reversion
5. Test rollback procedure before launch